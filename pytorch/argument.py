import argparse

parser = argparse.ArgumentParser(description='MEMRNN Time series prediction')
parser.add_argument('--data', type=str, default='../../LSTNet/data//electricity.txt', help='location of the data file')
parser.add_argument('--model', type=str, default='MEMRNN')
parser.add_argument('--CNN_unit', type=int, default=32, help='number of CNN hidden unit')
parser.add_argument('--GRU_unit', type=int, default=32, help='number of GRU hidden unit')
parser.add_argument('--CNN_kernel', type=int, default=2, help='kernel size of CNN')
parser.add_argument('--input_length', type=int, default=24, help='number of hours')
parser.add_argument('--highway_window', type=int, default=24, help='The window size of the highway component')
parser.add_argument('--clip', type=float, default=10., help='gradient clipping')
parser.add_argument('--epochs', type=int, default=200, help='upper epoch limit')
parser.add_argument('--batch_size', type=int, default=128, help='batch size')
parser.add_argument('--horizon', type=int, default=3, help='horizon')
parser.add_argument('--AR', type=int, default=24, help='AR')
parser.add_argument('--save', type=str, default='model/model.pt', help='path to save the final model')
parser.add_argument('--L1Loss', type=bool, default=True)
parser.add_argument('--normalize', type=int, default=2)
parser.add_argument('--cuda', type=str, default=True)
parser.add_argument('--gpu', type=int, default=1)
parser.add_argument('--dropout', type=float, default=0.2,
                    help='dropout applied to layers (0 = no dropout)')
parser.add_argument('--output_fun', type=str, default='sigmoid')
parser.add_argument('--optim', type=str, default='rmsprop')
parser.add_argument('--lr', type=float, default=0.0001)
parser.add_argument('--attn', type=int, default=1)
parser.add_argument('--output', type=str, default='output.csv')

args = parser.parse_args()
